% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cache-kb.R
\name{cache_kb_self}
\alias{cache_kb_self}
\title{Convenience function to cache to your own public or private Keybase folder}
\usage{
cache_kb_self(cache_subdir, private = TRUE, algo = "sha512")
}
\arguments{
\item{cache_subdir, private}{subdirectory \emph{under} either \code{KB_HOME/private} (if \code{private}
is \code{TRUE}, the default) or \code{KB_HOME/public} if (\code{private} is \code{FALSE}).
It will be created if it does not exist.}

\item{algo}{The hashing algorithm used for the cache, see \code{\link[digest:digest]{digest::digest()}}
for available algorithms.}
}
\description{
Convenience function to cache to your own public or private Keybase folder
}
\details{
This ultimately uses \code{\link[=cache_fs2]{cache_fs2()}}, which means two additional functions are
provided in slots in the returned list:
\itemize{
\item \code{location()} which will return the path to the cache directory
\item \code{size()} which will compute and return the size of the cache (in bytes)
}
}
\examples{
kbc <- cache_kb_self(".cache")

kbc$location()

mrunif <- memoise::memoise(runif, cache = kbc)

mrunif(10) # First run, saves cache
mrunif(10) # Loads cache, results should be identical

kbc$keys()

kbc$size()

kbc$reset()

kbc$size()
}
